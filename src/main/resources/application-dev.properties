#tomcat
server.port=8087
server.servlet-path=/

#springmvc
#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.view.suffix=.jsp

#thymeleaf
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:templates/
spring.thymeleaf.suffix=.html

#log use xml
#in properties or in logback.xml
#logging.level.root=INFO
#logging.level.org.springframework=INFO
#logging.level.org.springframework.test=INFO
#logging.level.org.hibernate=INFO
#logging.level.com.ibatis.common.jdbc.SimpleDataSource=INFO
#logging.level.com.ibatis=INFO
#logging.level.com.ibatis.common.jdbc.ScriptRunner=INFO
#logging.level.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=INFO
#logging.level.java.sql.Connection=INFO
#logging.level.java.sql.Statement=INFO
#logging.level.java.sql.PreparedStatement=INFO
#logging.file=E:\\logs\\springboot-web\\my2.log
#logging.pattern.console=%-5p [%d][%mdc{mdc_accNo}] %C:%L - %m %n
#logging.pattern.file=%-5p [%d][%mdc{mdc_accNo}] %C:%L - %m %n

#datasource
#in properties or in classes for another dataSource druid
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.filters=stat
spring.datasource.maxActive=20
spring.datasource.initialSize=1
spring.datasource.maxWait=60000
spring.datasource.minIdle=5
spring.datasource.maxIdle=10
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=25200000
spring.datasource.validationQuery=select 1
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20

#hibernate-create/create-drop/update/validate
spring.jpa.properties.hibernate.hbm2ddl.auto=update

#true-proxy by class.	or	false-proxy by interface.
spring.aop.proxy-target-class=true
#if enable aop to running. just like @EnableTransactionManagement.
spring.aop.auto=true


#the file's size max value
multipart.maxFileSize=100Mb
#the request's max value
multipart.maxRequestSize=100Mb


#rabbitmq
spring.rabbitmq.host=192.168.116.131
spring.rabbitmq.port=5672
spring.rabbitmq.username=cuish
spring.rabbitmq.password=zhiguoguo


management.endpoint.shutdown.enabled=true
management.endpoint.beans.enabled=true
management.endpoint.conditions.enabled=true
management.endpoint.configprops.enabled=true
management.endpoint.env.enabled=true
management.endpoint.flyway.enabled=true
management.endpoint.health.enabled=true
management.endpoint.httptrace.enabled=true
management.endpoint.info.enabled=true
management.endpoint.loggers.enabled=true
management.endpoint.liquibase.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.mappings.enabled=true
management.endpoint.scheduledtasks.enabled=true
management.endpoint.sessions.enabled=true
management.endpoint.threaddump.enabled=true
management.endpoint.heapdump.enabled=true
management.endpoint.jolokia.enabled=true
management.endpoint.logfile.enabled=true
management.endpoint.prometheus.enabled=true


management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=env,beans

management.endpoints.web.base-path=/


#org.springframework.boot.autoconfigure.web.ServerProperties
#最大工作线程数量
server.tomcat.maxThreads=3000
#最小空闲线程数
server.tomcat.minSpareThreads=0
#服务器在任何给定时间接受和处理的最大连接数。一旦达到限制，操作系统仍然可以接受基于“acceptCount”属性的连接。
server.tomcat.maxConnections=500
#当所有可能的请求处理线程都在使用时，传入连接请求的最大队列长度。
server.tomcat.acceptCount=10
server.tomcat.maxHttpPostSize=0
server.tomcat.maxHttpPostSize=0

#redis
#Matser\u7684ip\u5730\u5740  
redis.hostName=192.168.177.128
#\u7AEF\u53E3\u53F7  
redis.port=6382
#\u5982\u679C\u6709\u5BC6\u7801  
redis.password=
#\u5BA2\u6237\u7AEF\u8D85\u65F6\u65F6\u95F4\u5355\u4F4D\u662F\u6BEB\u79D2 \u9ED8\u8BA4\u662F2000 
redis.timeout=10000  

#\u6700\u5927\u7A7A\u95F2\u6570  
redis.maxIdle=300  
#\u8FDE\u63A5\u6C60\u7684\u6700\u5927\u6570\u636E\u5E93\u8FDE\u63A5\u6570\u3002\u8BBE\u4E3A0\u8868\u793A\u65E0\u9650\u5236,\u5982\u679C\u662Fjedis 2.4\u4EE5\u540E\u7528redis.maxTotal  
#redis.maxActive=600  
#\u63A7\u5236\u4E00\u4E2Apool\u53EF\u5206\u914D\u591A\u5C11\u4E2Ajedis\u5B9E\u4F8B,\u7528\u6765\u66FF\u6362\u4E0A\u9762\u7684redis.maxActive,\u5982\u679C\u662Fjedis 2.4\u4EE5\u540E\u7528\u8BE5\u5C5E\u6027  
redis.maxTotal=1000  
#\u6700\u5927\u5EFA\u7ACB\u8FDE\u63A5\u7B49\u5F85\u65F6\u95F4\u3002\u5982\u679C\u8D85\u8FC7\u6B64\u65F6\u95F4\u5C06\u63A5\u5230\u5F02\u5E38\u3002\u8BBE\u4E3A-1\u8868\u793A\u65E0\u9650\u5236\u3002  
redis.maxWaitMillis=1000  
#\u8FDE\u63A5\u7684\u6700\u5C0F\u7A7A\u95F2\u65F6\u95F4 \u9ED8\u8BA41800000\u6BEB\u79D2(30\u5206\u949F)  
redis.minEvictableIdleTimeMillis=300000  
#\u6BCF\u6B21\u91CA\u653E\u8FDE\u63A5\u7684\u6700\u5927\u6570\u76EE,\u9ED8\u8BA43  
redis.numTestsPerEvictionRun=1024  
#\u9010\u51FA\u626B\u63CF\u7684\u65F6\u95F4\u95F4\u9694(\u6BEB\u79D2) \u5982\u679C\u4E3A\u8D1F\u6570,\u5219\u4E0D\u8FD0\u884C\u9010\u51FA\u7EBF\u7A0B, \u9ED8\u8BA4-1  
redis.timeBetweenEvictionRunsMillis=30000  
#\u662F\u5426\u5728\u4ECE\u6C60\u4E2D\u53D6\u51FA\u8FDE\u63A5\u524D\u8FDB\u884C\u68C0\u9A8C,\u5982\u679C\u68C0\u9A8C\u5931\u8D25,\u5219\u4ECE\u6C60\u4E2D\u53BB\u9664\u8FDE\u63A5\u5E76\u5C1D\u8BD5\u53D6\u51FA\u53E6\u4E00\u4E2A  
redis.testOnBorrow=true  
#\u5728\u7A7A\u95F2\u65F6\u68C0\u67E5\u6709\u6548\u6027, \u9ED8\u8BA4false
redis.testWhileIdle=true  

#redis\u96C6\u7FA4\u914D\u7F6E      
spring.redis.cluster.nodes=192.168.177.128:7001,192.168.177.128:7002,192.168.177.128:7003,192.168.177.128:7004,192.168.177.128:7005,192.168.177.128:7006
spring.redis.cluster.max-redirects=3
